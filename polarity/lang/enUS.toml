# Polarity language file
# THIS FILE MUST BE MODIFIED MANUALLY, USE VSCODE, VIM, EMACS OR SIMILARS
# Language rules: https://github.com/Aveeryy/Polarity/wiki/Language-rules

language_name = "English (united states)"
language_code = "enUS"
language_author = "Aveeryy"

[main]
added_arg = "Added argument \"%s\" from %s"
exit_msg = "Exiting..."
using_version = "Using Polarity %s"

[main.arguments.groups]
general = "General options"
download = "Download options"
igloo = "Igloo options"
extractor = "%s options"
sync = "Sync options"
debug = "Debug options"

[main.arguments.help]
add_to_igloo = "Adds media data to igloo, then exits"
add_to_sync = "Add urls to sync list if the extractor has support, then exits"
all_extractors = "Prints info from all extractors, then exits"
debug_directory = "Custom debugging directory, by default uses \"~/.polarity/debug/\""
debug_dump_options = "Writes options to the debug directory"
debug_print_options = "Prints options, and exits"
download_dir_series = "Download directory for tv series"
download_dir_movies = "Download directory for movies"
extended_help = "Show arguments' options"
format_episode = "Formatting for episodes' filenames"
format_movie = "Formatting for movies' filenames"
format_season = "Formatting for seasons' directories"
format_series = "Formatting for tv series' directories"
help = "Shows help"
postprocessing = "Toggles extractor-specific post-processing"
proxy = "Proxy list to use, format: \"protocol ip:port\""
redownload = "Redownload previously downloaded episodes"
resolution = "Preferred video resolution"
search = "Search for content in sites with extractors that support it"
status_file = "Report download status to file"
sync = ""
sync_refresh = "Interval the sync list gets updated, on minutes"
update_git = "Update to the latest git release "
url = "Input URLs"
verbose = "Verbosity level"

[main.arguments.metavar]
proxy = "<path>"
search = "<search term>"
verbose = "<level>"

[polarity]
available_languages = "Available languages:"
language_format = "%s (%s) by %s"
no_urls = "Error: no URLs inputted."
use_help = "Use --help to display all available options"
use = 'Usage: '

[polarity.exceptions]
verbose_error = "Verbose level must be between 1 to 5. current value: %s"

[downloader]
cannot_download_content = "%s \"%s\" can't be downloaded: %s"
download_successful = "Downloaded %s %s \"%s\""
downloading_content = "Downloading %s \"%s\""
fail_to_delete = "Can't delete old file. you'll need to do it manually"
fail_to_move = "Can't move file to download directory. you'll need to do it manually"
redownload_enabled = "Redownload is enabled, deleting old file..."
no_redownload = "Skipping %s \"%s\". Has already been downloaded previously"

[downloader.exceptions]
no_extractor_available = "There's not a extractor available for this url"

[downloader.media_types]
series = "TV series"
season = "Season"
episode = "Episode"
movie = "Movie"

[penguin]
debug_active_threads = "Active Threads: %d"
debug_already_downloaded = "Skipping segment %s, already downloaded"
debug_downloaded_segment = "Successfully downloaded segment %s"
debug_time_download = "Download took: %s"
debug_time_remux = "Remux took: %s"
thread_converted = "Converted thread \"%s\" to %s"
thread_started = "Started thread \"%s\""
threads_started = "Starting %d download threads"

[penguin.protocols.hls]
getting_playlist = "Getting playlist information"

[extractor.base]
login_email_prompt = "Email/Username: "
login_password_prompt = "Password: "
postprocessing = "Starting postprocessing task"
postprocessing_empty_path = "Path cannot be empty"
postprocessing_not_applicable = "Postprocessing cannot be done on this video"
postprocessing_remux = "Remuxing video back together"

[extractor.base.exceptions]
argument_variable_empty = "Variable argument is empty"
content_unavailable = "Content is unavailable in your region or has been taken out of the platform"
invalid_type = "You can only create a season in a tv series"
invalid_type_alt = "You can only create an episode in a tv series"
invalid_cloudscraper_method = "'invalid cloudscraper method: \"%s\""
need_to_create_season_01 = "You need to create a season before creating an episode!"
need_to_create_season_02 = "Can't append something that doesn't exist! (create a season first)"
need_to_create_season_03 = "Can't append to something that doesn't exist! (create a season first)"

[extractor.generals]
cloudflare_timeout = "You made too many requests to %s."
cloudflare_info = "All processed episodes will be downloaded, try again in 24 hours to download the rest!"
generic_error = "An error has happened! error message: "
get_all_seasons = "Getting information from all seasons"
get_media_info = "Getting information from %s \"%s\" (%s)"
login_failure = "Failed to log in. error code: %s"
login_loggedas = "Logged in as %s"
login_success = "Login successful"
obtained_media_id = "Obtained %s id: %s"
skip_episode_id = "Skipping episode with id %s, %s"
skip_episode_name = "Skipping episode \"%s\", %s"

[extractor.generals.exceptions]
cannot_identify_url = "Failed to identify URL. Invalid URL?"

[extractor.generals.media_types]
series = "Series"
season = "Season"
episode = "Episode"
movie = "Movie"

[update]
downloading_git = "Downloading the latest git release"
downloading_release = "Downloading the latest stable release"
downloading_native = "Downloading the latest native binary"
installing_to_path = "Installing to %s"
successful_install = "Success! Exiting in %d seconds"
updating = 'Updating...'

[atresplayer]
no_content_in_season = "No episodes found in %s (%s)"

[atresplayer.exceptions]
invalid_codec = "Invalid codec set in settings."

[atresplayer.arguments]
# TODO

[crunchyroll]
content_unavailable = "No seasons found, content is unavailable for your region!"
fail_to_download_reason_01 = "Content requires a premium account (or an error happened)"
invalid_metadata = "Invalid metadata language code, defaulting to english"
session_id = "Session id: "
session_id_custom = "Using custom session id %s"
session_id_failure = "Failed to get session id, retrying..."
session_id_forced = "Forcing new session id"
session_id_local = "Using local session id"
session_id_region = "Grabbing session id from your region"
session_id_usa = "Grabbing usa session id"
unavailable_episode_reason = "Requires a premium account or unavailable in your region"

[crunchyroll.arguments]
# TODO